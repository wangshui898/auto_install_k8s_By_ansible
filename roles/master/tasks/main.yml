---
- name: 创建K8S工作目录
  file:
    dest={{ k8s_dir }}/{{ item }}
    state=directory
  with_items:
    - bin
    - cfg
    - ssl/etcd
    - logs

- name: 创建临时目录
  file:
    dest={{ k8s_src_dir }}/{{ item }}
    state=directory
  with_items:
    - tmp
    - images

- name: 创建YAML文件目录
  file:
    dest={{ k8s_dir }}/yaml
    state=directory

- name: 解压分发{{ kubenetes_version }}
  unarchive:
    src={{ item }}
    dest={{ k8s_src_dir }}/tmp
  with_items:
    - "{{ k8s_src_dir }}/{{ kubenetes_version }}"

- name: 拷贝k8s可执行文件到工作目录
  shell: cd {{ k8s_src_dir }}/tmp/kubernetes/server/bin && \
         cp -rf kubectl kube-proxy kubeadm kubelet kube-controller-manager kube-scheduler kube-apiserver mounter {{ k8s_dir }}/bin/ && \
         cp -rf kubectl /usr/bin/

- name: 分发etcd证书
  copy:
    src=etcd_cert/{{ item }}
    dest={{ k8s_dir }}/ssl/etcd
  with_items:
    - ca.pem
    - server.pem
    - server-key.pem

- name: 分发k8s证书
  copy:
    src=k8s_cert/{{ item }}
    dest={{ k8s_dir }}/ssl
  with_items:
    - ca.pem
    - ca-key.pem
    - server.pem
    - server-key.pem

- name: 分发token文件
  template: src=token.csv.j2 dest={{ k8s_dir }}/cfg/token.csv

- name: 分发K8s-master配置文件
  template:
    src={{ item }}
    dest={{ k8s_dir }}/cfg/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - kube-apiserver.conf.j2
    - kube-controller-manager.conf.j2
    - kube-scheduler.conf.j2


- name: 分发K8s-master启动文件
  template:
    src={{ item }}
    dest=/usr/lib/systemd/system/{{ item.split('.')[:-1]|join('.') }}
  with_items:
    - kube-apiserver.service.j2
    - kube-controller-manager.service.j2
    - kube-scheduler.service.j2


- name: 启动k8s-master组件
  systemd: name={{ item }} state=restarted enabled=yes daemon_reload=yes
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler

- name: 查看k8s集群状态
  shell: sleep 5 && kubectl get cs
  register: cs
- debug: msg={{ cs.stdout_lines }}

- name: 拷贝RBAC文件
  copy: src={{ item }} dest={{ k8s_dir }}/yaml
  with_items:
    - kubelet-bootstrap-rbac.yaml
    - apiserver-to-kubelet-rbac.yaml


- name: 授权APIServer访问Kubelet与授权kubelet bootstrap
  ignore_errors: yes
  shell: sleep 3 && 
         kubectl apply -f {{ k8s_dir }}/yaml/apiserver-to-kubelet-rbac.yaml && \
         kubectl apply -f {{ k8s_dir }}/yaml/kubelet-bootstrap-rbac.yaml
